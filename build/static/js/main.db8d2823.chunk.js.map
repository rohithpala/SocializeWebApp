{"version":3,"sources":["actions/types.js","actions/auth.js","components/navbarHome.js","containers/signup.js","containers/Login.js","containers/ResetPassword.js","containers/resetPasswordConfirm.js","hocs/Layout.js","reducers/auth.js","store.js","containers/activate.js","containers/Home.js","media/404NotFound.svg","containers/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","Authorization","Accept","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","logout","className","to","onClick","signup","name","email","password","re_password","body","JSON","stringify","configForChatApi","method","url","username","secret","post","useState","accountCreated","setAccountCreated","formData","setFormData","pathname","placeholder","value","onChange","e","target","preventDefault","login","console","log","reset_password","requestSent","setRequestSent","reset_password_confirm","uid","token","new_password","re_new_password","match","params","checkAuthenticated","code","props","useEffect","children","initialState","access","refresh","user","middleware","thunk","store","createStore","action","setItem","removeItem","composeWithDevTools","applyMiddleware","verify","verified","setVerified","Home","setUsername","renderChatForm","creds","getOrCreateChat","is_direct_chat","usernames","createDirectChat","useLocation","height","font-family","projectID","userName","userSecret","renderNewChatForm","error","NotFoundPage","alt","src","NotFoundImg","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db8d2823.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAIL = \"ACTIVATION_FAIL\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import axios from \"axios\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  LOGOUT,\r\n} from \"./types\";\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\r\n        body,\r\n        config\r\n      );\r\n      if (res.data.code !== \"token_not_valid\") {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAIL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const load_user = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const signup =\r\n  (name, email, password, re_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n    const data = {\r\n      username: email,\r\n      secret: password,\r\n    };\r\n\r\n    var configForChatApi = {\r\n      method: \"post\",\r\n      url: \"https://api.chatengine.io/users/\",\r\n      headers: {\r\n        \"PRIVATE-KEY\": \"a7fce0f4-f9f6-41b8-bc64-5de01307219d\",\r\n      },\r\n      data: data,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\r\n        body,\r\n        config\r\n      );\r\n      const resChatApi = await axios(configForChatApi);\r\n      dispatch({\r\n        type: SIGNUP_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(load_user());\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SIGNUP_FAIL,\r\n      });\r\n    }\r\n  };\r\nexport const verify = (uid, token) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ uid, token });\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const reset_password = (email) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email });\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n    });\r\n  }\r\n};\r\nexport const reset_password_confirm =\r\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_FAIL,\r\n      });\r\n    }\r\n  };\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/navbarHome.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\n\r\nconst navbarHome = ({ logout, isAuthenticated }) => {\r\n  const guestLinks = () => {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"navBarHomeButtonsDiv\">\r\n          <Link to=\"/signup\">\r\n            <button className=\"navBarHomeButton\">Sign up</button>\r\n          </Link>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n  const authLinks = () => {\r\n    return (\r\n      <Link to=\"/\" onClick={logout}>\r\n        <button className=\"navBarLogoutButton\">Logout</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbarHomeMainDiv\">\r\n      <Link to={isAuthenticated ? \"/home\" : \"/\"} className=\"appTitleHome\">\r\n        Socialize\r\n      </Link>\r\n      {isAuthenticated ? authLinks() : guestLinks()}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { logout })(navbarHome);\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup } from \"../actions/auth\";\r\nimport { useState } from \"react\";\r\nimport \"../stylesheets/signup.css\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// toast.configure();\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  // const notify = (msg) => {\r\n  //   toast(msg, { position: toast.POSITION.TOP_RIGHT, autoClose: 3000 });\r\n  // };\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n  });\r\n  const { name, email, password, re_password } = formData;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password === re_password) {\r\n      // notify(\"Details Submitted Successfully\");\r\n      signup(name, email, password, re_password);\r\n      setAccountCreated(true);\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/home\",\r\n          state: {\r\n            isAuthenticated: true,\r\n            email: email,\r\n            secret: password,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  if (accountCreated) {\r\n    // notify(\"Account Created Successfully\");\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className=\"signupMainDiv\">\r\n      <span className=\"signupHeading\">Sign up</span>\r\n      <input\r\n        name=\"name\"\r\n        className=\"signupNameInput\"\r\n        placeholder=\"Name*\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n\r\n      <input\r\n        name=\"email\"\r\n        className=\"signupEmailIdInput\"\r\n        placeholder=\"Email*\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n\r\n      <input\r\n        name=\"password\"\r\n        className=\"signupPasswordInput\"\r\n        placeholder=\"Password*\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n      <input\r\n        name=\"re_password\"\r\n        className=\"signupPasswordInput\"\r\n        placeholder=\"Re-enter Password*\"\r\n        type=\"password\"\r\n        value={re_password}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n      <div className=\"signupButtonDiv\">\r\n        <button onClick={onSubmit} className=\"signupButton\">\r\n          Sign up\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"alreadyHaveAccountTextDiv\">\r\n        <span>Already have an account? </span>\r\n\r\n        <Link className=\"signupLink\" to=\"/\">\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { useState } from \"react\";\r\n// import { toast } from \"react-toastify\";\r\n\r\nimport \"../stylesheets/login.css\";\r\n\r\n// toast.configure();\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  // const notify = (msg) => {\r\n  //   toast(msg, { position: toast.POSITION.TOP_RIGHT, autoClose: 3000 });\r\n  // };\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = formData;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/home\",\r\n          state: {\r\n            isAuthenticated: true,\r\n            email: email,\r\n            secret: password,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginMainDiv\">\r\n      <span className=\"loginHeading\">Login</span>\r\n\r\n      <input\r\n        name=\"email\"\r\n        className=\"loginEmailIdInput\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n\r\n      <input\r\n        name=\"password\"\r\n        className=\"loginPasswordInput\"\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n      <div className=\"forgotPassDiv\">\r\n        <Link className=\"forgotPassLink\" to=\"/reset-password\">\r\n          Forgot password?\r\n        </Link>\r\n      </div>\r\n      <div className=\"loginButtonDiv\">\r\n        <button onClick={onSubmit} className=\"loginButton\">\r\n          Login\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"dontHaveAccountTextDiv\">\r\n        <span>Don't have an account? </span>\r\n\r\n        <Link className=\"signupLink\" to=\"/signup\">\r\n          Signup\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\nimport { useState } from \"react\";\r\nimport \"../stylesheets/ResetPassword.css\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n  const { email } = formData;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className=\"resetPasswordMainDiv\">\r\n      <div className=\"resetPasswordSubMainDiv\">\r\n        <span className=\"resetPasswordRequestHeading\">\r\n          Request Password reset\r\n        </span>\r\n\r\n        <input\r\n          name=\"email\"\r\n          className=\"resetPasswordEmailIdInput\"\r\n          placeholder=\"Email*\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n          }\r\n        ></input>\r\n        <div className=\"resetPasswordButtonDiv\">\r\n          <button onClick={onSubmit} className=\"resetPasswordButton\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\nimport { useState } from \"react\";\r\nimport \"../stylesheets/ResetPC.css\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n  const { new_password, re_new_password } = formData;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className=\"resetPCMainDiv\">\r\n      <div className=\"resetPCSubMainDiv\">\r\n        <span className=\"resetPCHeading\">Set new password</span>\r\n\r\n        <input\r\n          name=\"new_password\"\r\n          className=\"resetPCPasswordInput\"\r\n          placeholder=\"New Password*\"\r\n          type=\"password\"\r\n          value={new_password}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n          }\r\n        ></input>\r\n        <input\r\n          name=\"re_new_password\"\r\n          className=\"resetPCPasswordInput\"\r\n          placeholder=\"Confirm New Password*\"\r\n          type=\"password\"\r\n          value={re_new_password}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n          }\r\n        ></input>\r\n        <div className=\"resetPCButtonDiv\">\r\n          <button onClick={onSubmit} className=\"resetPCButton\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import React, { useEffect } from \"react\";\r\n// import Navbar from \"../components/navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\r\n\r\nconst Layout = (props) => {\r\n  useEffect(() => {\r\n    props.checkAuthenticated();\r\n    props.load_user();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <Navbar /> */}\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        isAuthenticated: true,\r\n      };\r\n    case AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case LOGIN_FAIL:\r\n    case SIGNUP_FAIL:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case PASSWORD_RESET_FAIL:\r\n\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case ACTIVATION_FAIL:\r\n    case ACTIVATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/auth\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\nimport { useState } from \"react\";\r\nimport \"../stylesheets/activate.css\";\r\n\r\nconst Activate = ({ verify, match }) => {\r\n  const [verified, setVerified] = useState(false);\r\n  const verify_account = (e) => {\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n    verify(uid, token);\r\n    setVerified(true);\r\n  };\r\n  if (verified) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className=\"activateMainDiv\">\r\n      <div className=\"activateSubMainDiv\">\r\n        <span className=\"verifyHeading\">Verify your Account</span>\r\n        <button className=\"verifyButton\" onClick={verify_account}>\r\n          Verify\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { Component, useState } from \"react\";\r\nimport { Redirect, Link, useLocation } from \"react-router-dom\";\r\nimport { ChatEngine, getOrCreateChat } from \"react-chat-engine\";\r\n\r\nimport \"../stylesheets/Home.css\";\r\n\r\nconst Home = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  try {\r\n    const location = useLocation();\r\n\r\n    const { isAuthenticated, email, secret } = location.state;\r\n    console.log(isAuthenticated);\r\n    function createDirectChat(creds) {\r\n      getOrCreateChat(\r\n        creds,\r\n        { is_direct_chat: true, usernames: [username] },\r\n        () => setUsername(\"\")\r\n      );\r\n    }\r\n\r\n    function renderChatForm(creds) {\r\n      return (\r\n        <div className=\"homeCreateDMDiv\">\r\n          <input\r\n            className=\"homeUsernameInput\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"homeCreateButton\"\r\n            onClick={() => createDirectChat(creds)}\r\n          >\r\n            Create\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    if (isAuthenticated) {\r\n      return (\r\n        <ChatEngine\r\n          height=\"calc(100vh - 66px)\"\r\n          font-family=\"Poppins\"\r\n          projectID=\"648e4821-3514-498a-9879-75c960e463de\"\r\n          userName={email}\r\n          userSecret={secret}\r\n          renderNewChatForm={(creds) => renderChatForm(creds)}\r\n        />\r\n      );\r\n    }\r\n  } catch (error) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/404NotFound.fe8bd0bb.svg\";","import React, { useState } from \"react\";\r\nimport \"../stylesheets/NotFoundPage.css\";\r\nimport NotFoundImg from \"../media/404NotFound.svg\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className=\"notFoundPageMainDiv\">\r\n      <img alt=\"img\" className=\"img\" src={NotFoundImg} />\r\n      <span className=\"notFoundText\">Page not found</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavbarHome from \"./components/navbarHome\";\nimport Signup from \"./containers/signup\";\nimport Login from \"./containers/Login\";\nimport ResetPassword from \"./containers/ResetPassword\";\nimport ResetPasswordConfirm from \"./containers/resetPasswordConfirm\";\nimport Layout from \"./hocs/Layout\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Activate from \"./containers/activate\";\nimport React, { useState } from \"react\";\nimport Home from \"./containers/Home\";\nimport NotFoundPage from \"./containers/NotFoundPage\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Layout>\n          <NavbarHome />\n          <div className=\"appBottomDiv\">\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/reset-password\" component={ResetPassword} />\n              <Route\n                exact\n                path=\"/password/reset/confirm/:uid/:token\"\n                component={ResetPasswordConfirm}\n              />\n              <Route exact path=\"/activate/:uid/:token\" component={Activate} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/*\" component={NotFoundPage} />\n            </Switch>\n          </div>\n        </Layout>\n      </BrowserRouter>\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}